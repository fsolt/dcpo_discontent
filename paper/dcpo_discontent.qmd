---
format:
  pdf:
    number-sections: true
    papersize: a4
    keep-tex: false
    # thanks: "Yue Hu appreciates the funding support from the National Natural Science Foundation of China (72374116)."
crossref:
#  sec-prefix: OSM
  sec-labels: alpha A
# author:
#   - name: Yuehong 'Cassandra' Tai
#     email: yhcasstai@psu.edu
#     orcid: 0000-0001-7303-7443
#     affiliations:
#       - ref: psu
#   - name: Yue Hu
#     corresponding: true
#     affiliations:
#       - ref: tsu
#     orcid: 0000-0002-2829-3971
#     email: yuehu@tsinghua.edu.cn
#     url: https://sammo3182.github.io
#   - name: Haofeng Ma
#     orcid: https://orcid.org/0000-0003-4379-8449
#     email: haofeng-ma@uiowa.edu
#     affiliations:
#       - ref: ui
#   - name: Frederick Solt
#     orcid: 0000-0002-3154-6132
#     email: frederick-solt@uiowa.edu
#     affiliations:
#       - ref: ui
# affiliations:
#   - id: tsu
#     name: Department of Political Science, Tsinghua University, Beijing, China
#   - id: psu
#     name: Center for Social Data Analytics, Penn State University, PA, U.S.
#   - id: ui
#     name: Department of Political Science, University of Iowa, IA, U.S.
citeproc: false # to make multibib and wordcount work
filters:
  - at: pre-render
    path: "_extensions/pandoc-ext/multibib/multibib.lua"
  - at: pre-render
    path: "_extensions/andrewheiss/wordcount/wordcount.lua"
validate-yaml: false # for multibib to work
  # - authors-block
# reference of multibib: https://www.andrewheiss.com/blog/2023/12/11/separate-bibliographies-quarto/
bibliography: 
    main: p_dcpo_trustRegime_main.bib
    appendix: p_dcpo_trustRegime_app.bib
citation_package: natbib
tables: true # enable longtable and booktabs
fontsize: 12pt
indent: true
geometry: margin=1in
linestretch: 1.5 # double spacing using linestretch 1.5
citecolor: black
linkcolor: black
link-citations: true
execute:
  echo: false
  message: false
  warning: false
  dpi: 300
editor_options: 
  chunk_output_type: console
title:  "Political Discontent"
# subtitle: |
abstract: |
    Put abstract here.
    And here.
keywords: 
    - Political discontent
    - Regime stability
    - Cross-national panel
editor: 
  markdown: 
    wrap: sentence
---

\pagenumbering{gobble}

# Authors {.unlisted .unnumbered}

-   Haofeng Ma, ORCID: <https://orcid.org/0000-0003-4379-8449>, Ph.D. Candidate, Department of Political Science, University of Iowa, [haofeng-ma\@uiowa.edu](mailto:haofeng-ma@uiowa.edu){.email}
-   Jeongho Choi, ORCID: <https://orcid.org/0000-0002-8060-7907>, Ph.D. Candidate, Department of Political Science, University of Iowa, [jeongho-choi\@uiowa.edu](mailto:jeongho-choi@uiowa.edu){.email}
-   Yuehong Cassandra Tai, ORCID: <https://orcid.org/0000-0001-7303-7443>, Postdoctoral Fellow, Center for Social Data Analytics, Pennsylvania State University, [yhcasstai\@psu.edu](mailto:yhcasstai@psu.edu){.email}
-   Yue Hu, ORCID: <https://orcid.org/0000-0002-2829-3971>, Associate Professor, Department of Political Science, Tsinghua University, [yuehu\@tsinghua.edu.cn](mailto:yuehu@tsinghua.edu.cn){.email}
-   Frederick Solt, ORCID: <https://orcid.org/0000-0002-3154-6132>, Professor, Department of Political Science, University of Iowa, [frederick-solt\@uiowa.edu](mailto:frederick-solt@uiowa.edu){.email}

# Data Availability Statement {.unlisted .unnumbered}

Replication data is available on the Harvard Dataverse \[link tbd\], and the work's complete revision history is available at \url{https://github.com/fsolt/dcpo_discontent}.

\pagebreak

```{=tex}
\renewcommand{\baselinestretch}{1}
\selectfont
\maketitle
\renewcommand{\baselinestretch}{1.5}
\selectfont
\pagenumbering{arabic}
```
```{=tex}
\begin{abstract}
abstract
\end{abstract}
```
```{r setup, include=FALSE}
if (!require(pacman)) install.packages("pacman")
library(pacman)
p_install(janitor, force = FALSE)
#p_install_gh(c("fsolt/DCPOtools"), force = FALSE)
if (!require(posterior))
    install.packages("posterior")
p_load(
    DCPOtools,
    cmdstanr,
    tidyverse,
    here,
    rio,
    countrycode,
    patchwork,
    ggthemes,
    ggdist,
    imputeTS,
    rsdmx,
    osfr,
    tabulapdf,
    brms,
    bayestestR,
    tidybayes,
    repmis,
    rvest,
    vroom,
    modelsummary,
    kableExtra,
    rnaturalearth, # maps
    rnaturalearthdata, # maps
    sf
) 

theme_set(theme_minimal())
set.seed(313)

conflicted::conflicts_prefer(dplyr::filter,
                             dplyr::select,
                             posterior::sd,
                             posterior::mad,
                             DCPOtools::extract_dcpo_results)
```

```{r define_funs}
# define functions
validation_plot <- function(v_data_raw,
                            lab_x = 38, lab_y = 92,
                            theta_summary, theta_results,
                            survey = TRUE) {
    
    # defaults per https://stackoverflow.com/a/49167744/2620381
    if ("theta_summary" %in% ls(envir = .GlobalEnv) & missing(theta_summary))
        theta_summary <- get("theta_summary", envir = .GlobalEnv)
    if ("theta_results" %in% ls(envir = .GlobalEnv) & missing(theta_results))
        theta_results <- get("theta_results", envir = .GlobalEnv)
    
    median_val <- Vectorize(function(x) median(1:x),
                            vectorize.args = "x")
    if (survey) {    
        v_vars <- v_data_raw %>% 
            select(item0 = item) %>% 
            unique() %>% 
            mutate(v_val = str_extract(item0, "\\d+") %>% 
                       as.numeric() %>% 
                       median_val(.) %>%
                       `+`(.6) %>% 
                       round())
        
        validation_summarized <- v_data_raw %>% 
            DCPOtools::format_dcpo(scale_q = v_vars$item0[[1]], # these arguments are required
                                   scale_cp = 1) %>% # but they don't matter
            pluck("data") %>% 
            mutate(item0 = str_remove(item, " \\d or higher"),
                   title = factor(v_data_raw %>%
                                      pull(title) %>%
                                      first()), 
                   levels = v_data_raw %>%
                       pull(title) %>%
                       unique(),
                   neg = v_data_raw %>% 
                       pull(neg) %>% 
                       first) %>% 
            right_join(v_vars, by = "item0") %>%
            arrange(title) %>% 
            filter(str_detect(item, paste(v_val, "or higher"))) %>%
            mutate(iso2c = countrycode::countrycode(country,
                                                    origin = "country.name",
                                                    destination = "iso2c",
                                                    warn = FALSE),
                   prop = if_else(neg, 1-y_r/n_r, y_r/n_r),
                   se = sqrt((prop*(1-prop))/n),
                   prop_90 = prop + qnorm(.9)*se,
                   prop_10 = prop - qnorm(.9)*se) %>%
            inner_join(theta_summary %>% select(-kk, -tt), by = c("country", "year"))
    } else {
        validation_summarized <- v_data_raw %>% 
            mutate(iso2c = countrycode::countrycode(country,
                                                    origin = "country.name",
                                                    destination = "iso2c",
                                                    warn = FALSE),
                   prop = prop,
                   se = se,
                   prop_90 = prop + qnorm(.9)*se,
                   prop_10 = prop - qnorm(.9)*se) %>%
            inner_join(theta_summary %>% select(-kk, -tt), by = c("country", "year"))
    }
    
    validation_cor <- theta_results %>%
        inner_join(validation_summarized %>%
                       select(country, year, title, prop, se),
                   by = c("country", "year")) %>% 
        rowwise() %>% 
        mutate(sim = rnorm(1, mean = prop, sd = se)) %>% 
        ungroup() %>% 
        select(title, theta, sim, draw) %>% 
        nest(data = c(theta, sim)) %>% 
        mutate(r = lapply(data, function(df) cor(df)[2,1]) %>% 
                   unlist()) %>%
        select(-data) %>% 
        group_by(title) %>% 
        summarize(r = paste("R =", sprintf("%.2f", round(mean(r), 2))))
    
    if ({validation_summarized %>%
            pull(country) %>%
            unique() %>% 
            length()} > 1) {
        val_plot <- validation_summarized %>%
            ggplot(aes(x = mean,
                       y = prop * 100)) +
            geom_segment(aes(x = q10, xend = q90,
                             y = prop * 100, yend = prop * 100),
                         na.rm = TRUE,
                         alpha = .2) +
            geom_segment(aes(x = mean, xend = mean,
                             y = prop_90 * 100, yend = prop_10 * 100),
                         na.rm = TRUE,
                         alpha = .2) +
            geom_smooth(method = 'lm', formula = 'y ~ x', se = FALSE) +
            facet_wrap(~ title, ncol = 4) +
            geom_label(data = validation_cor, aes(x = lab_x,
                                                  y = lab_y,
                                                  label = r),
                       size = 2)
    } else {
        val_plot <- validation_summarized %>%
            ggplot(aes(x = year,
                       y = mean)) +
            geom_line() +
            geom_ribbon(aes(ymin = q10,
                            ymax = q90,
                            linetype = NA),
                        alpha = .2) +
            geom_point(aes(y = prop*100),
                       fill = "black",
                       shape = 21,
                       size = .5,
                       na.rm = TRUE) +
            geom_path(aes(y = prop*100),
                      linetype = 3,
                      na.rm = TRUE,
                      alpha = .7) +
            geom_segment(aes(x = year, xend = year,
                             y = prop_90*100, yend = prop_10*100),
                         na.rm = TRUE,
                         alpha = .2) +
            facet_wrap(~ title, ncol = 4) +
            geom_label(data = validation_cor, aes(x = lab_x,
                                                  y = lab_y,
                                                  label = r),
                       size = 2)
    }
    
    return(val_plot)
}

covered_share_of_spanned <- function(dcpo_input_raw) {
    n_cy <- dcpo_input_raw %>%
        distinct(country, year) %>% 
        nrow()
    
    spanned_cy <- dcpo_input_raw %>% 
        group_by(country) %>% 
        summarize(years = max(year) - min(year) + 1) %>% 
        summarize(n = sum(years)) %>% 
        pull(n)
    
    {(n_cy/spanned_cy) * 100}
}

get_coef <- function(iv, 
                     results_df = coef_data,
                     type = "both",
                     width = .95,
                     abs = FALSE,
                     unstd = FALSE) {
  result_var <- results_df %>% 
    filter(.width == width) %>% 
    pull(.variable) %>% 
    str_subset(iv)
  
  result_all <- results_df %>% 
            filter(.variable == result_var & .width == width)
  
  sd2 <- result_all %>% 
            pull(sd2)
  
  if (type=="std_coef") {
    res <- result_all %>% 
      pull(std_coef)
    
    if (unstd) {
            res <- {as.numeric(res)/sd2} %>% 
            round(2) %>% 
            as.character()
    }
  } else if (type == "ci") {
      res <- result_all %>%
          mutate(ci = paste0(round(.lower, 1), " to ", round(.upper, 1))) %>%
          pull(ci)
      
      if (unstd) {
          res <- list(result_all$.lower, result_all$.upper) %>% 
              map(~ {as.numeric(.x)/sd2} %>%
                      round(2)) %>% 
              unlist() %>% 
              {paste(pluck(., 1), "to", pluck(., 2))}
    }
  } else {
    sc <- results_df %>% 
      filter(.variable == result_var & .width == width) %>% 
      pull(std_coef)
    
    ci <- result_all %>%
        mutate(ci = paste0(round(.lower, 1), " to ", round(.upper, 1))) %>%
        pull(ci)
    
    if (unstd) {
        sc <- {as.numeric(sc)/sd2} %>% 
            round(2)
        ci <- list(result_all$.lower, result_all$.upper) %>% 
            map(~ {as.numeric(.x)/sd2} %>%
                    round(3)) %>% 
            unlist() %>% 
            {paste(pluck(., 1), "to", pluck(., 2))}
    }
    res <- paste0(sc, " (95% c.i.: ", ci, ")")
  }
  
  if (abs) {
      res <- as.character(res) %>% 
          str_remove_all("-")
  }
  return(res)
}

by2sd <- function(var) {
    dich <- stats::na.omit(unique(var)) %>% 
        sort() %>% 
        identical(c(0, 1))
    if (dich) 
        sd <- 1
    else 
        sd <- 2 * stats::sd(var, na.rm = TRUE)
    
    return(sd)
}

pairwise_count <- function(x) {
    x <- !is.na(x)
    n <- crossprod(x)
    return(n)
}

long_corr <- function(x) {
    n_long <- crossprod(!is.na(x)) %>% 
        as.data.frame() %>% 
        rownames_to_column(var = "item1") %>% 
        pivot_longer(cols = -item1,
                     names_to = "item2",
                     values_to = "n")
    
    cor(x, use = "pairwise.complete.obs") %>% 
        as.data.frame() %>% 
        rownames_to_column(var = "item1") %>% 
        pivot_longer(cols = -item1,
                     names_to = "item2",
                     values_to = "corr") %>% 
        filter(!is.na(corr)) %>% 
        left_join(n_long, by = join_by(item1, item2))
}

set.seed(324)
```

Public discontent with political systems and institutions has become an increasingly salient concern in recent years, with implications for democratic stability and effective governance.
Widespread political discontent can undermine public confidence in the political process, erode the legitimacy of governing institutions, and create fertile ground for populist and anti-system movements [@mudde2004populist; @miller1974political; @lipset1959some].
Understanding political discontent is therefore crucial for identifying potential threats to democracy and developing strategies to bolster system support.
Nevertheless, the understanding of the nature, extent, and drivers of political discontent remains debated, with some arguing that the level of political discontent is on a clear declining trend while others claim that political discontent fluctuates without a clear sign of a declining trend [@jennings2017decline; @norris2011democratic; @foa2016danger; @foa2017signs].

This paper aims to provide a clearer conceptualization and more rigorous measurement of political discontent using survey data from a wide range of developed countries over several decades. 
Drawing on David Easton's (1965) classic distinction between diffuse and specific support for political systems, we define political discontent as dissatisfaction with or a lack of diffuse support for the political system as a whole, rather than disapproval of specific authorities or the incumbent government [@jennings2017decline].
The explicit distinction between diffuse and specific support is highly necessary because they have different levels of variation and different consequences for individuals' political behavior and, in turn, the sustainability of the political system [@citrin1974comment; @miller1974political; @craig1981political; @muller1983discontent].
Our conceptualization of political discontent encompasses key components of system support, including perceptions of system responsiveness (external efficacy), trust in political institutions and processes, and perceptions of political corruption, all of which are interrelated and collectively contribute to the broader construct of diffuse political discontent.

To overcome issues of incomparability and sparseness that often plague survey-based measures of political discontent in the previous studies, we employ the Dynamic Comparative Public Opinion (DCPO) model developed by @Solt2020c to estimate country-year panels of public political discontent in developed OECD countries. 
This approach allows us to combine information from a multitude of survey questions while accounting for differences in question content and response options. 
The resulting estimates cover an wide scope - thirty-eight countries and a total of 1217 country-years - enabling both cross-national comparison and over-time analysis.
We validate our measure by demonstrating its strong correlation between individual survey items, the democratic evaluation survey item not included in our estimation, and the construct believed causally related to political discontent (evaluations of recent government policy performance). 

Following, we explore drivers of political discontent, focusing on election, political institution, and economic factors. Our findings clearly suggest that political discontent has been on the increasing trend over time in developed OECD countries, supporting Foa and Mounk's (2016, 2017) thesis of democratic deconsolidation in developed democracies.  
Need to discuss the result (I left it blank and will write after the analysis is done).

By providing a broader examination of political discontent and its determinants, this study contributes to ongoing debates about the trajectories of political discontent across countries and over time.
A valid and comparable measure of political discontent can enrich future discussions of public opinion, representation, and democratic backsliding.
From a methodological standpoint, the paper demonstrates the utility of latent variable modeling for harnessing the wealth of underutilized cross-national survey data that are often fragmented and incomparable.

```{r dcpo_input_raw, eval=FALSE, include=FALSE}
# set eval to TRUE to run; running time is <5 minutes
surveys_pd <- read_csv(here::here("data-raw",
                                  "surveys_pd.csv"),
                       col_types = "cccc")

# item_groups <- c("eff",
#                  "trust_eff",
#                  "corrupt",
#                  "sat",
#                  "trust")
# 
# items_by_group <- map(item_groups, \(g) {
#     surveys_pd %>% 
#         filter(group == g) %>% 
#         pull(item) %>% 
#         unique() %>% 
#         sort()
# }) %>% 
#     set_names(item_groups)

dcpo_input_raw <- DCPOtools::dcpo_setup(vars = surveys_pd,
                                        datapath = here::here("..",
                                                              "data", "dcpo_surveys"),
                                        file = here::here("data",
                                                          "dcpo_input_raw.csv"))


```

```{r pd_summary_stats}
surveys_pd <- read_csv(here::here("data-raw",
                                  "surveys_pd.csv"),
                       col_types = "cccc")

dcpo_input_raw <- read_csv(here::here("data", "dcpo_input_raw.csv"),
                           col_types = "cdcddcd")

process_dcpo_input_raw <- function(dcpo_input_raw_df) {
    dcpo_input_raw_df %>% 
        filter(year >= 1968 & !country == "Northern Cyprus") %>% 
        with_min_yrs(3) %>% 
        with_min_cy(5) %>% 
        group_by(country) %>% 
        mutate(cc_rank = n()) %>% 
        ungroup() %>% 
        arrange(-cc_rank)
} 

dcpo_input_raw1 <- process_dcpo_input_raw(dcpo_input_raw)

n_surveys <- surveys_pd %>%
    distinct(survey) %>% 
    nrow()

n_items <- dcpo_input_raw1 %>%
    distinct(item) %>% 
    nrow()

n_countries <- dcpo_input_raw1 %>%
    distinct(country) %>% 
    nrow()

n_cy <- dcpo_input_raw1 %>%
    distinct(country, year) %>% 
    nrow() %>% 
    scales::comma()

n_years <- as.integer(summary(dcpo_input_raw1$year)[6]-summary(dcpo_input_raw1$year)[1] + 1)

spanned_cy <- dcpo_input_raw1 %>% 
    group_by(country) %>% 
    summarize(years = max(year) - min(year) + 1) %>% 
    summarize(n = sum(years)) %>% 
    pull(n) %>% 
    scales::comma()

total_cy <- {n_countries * n_years} %>% 
    scales::comma()

year_range <- paste("from",
                    summary(dcpo_input_raw1$year)[1],
                    "to",
                    summary(dcpo_input_raw1$year)[6])

n_cyi <- dcpo_input_raw1 %>% 
    distinct(country, year, item) %>% 
    nrow() %>% 
    scales::comma()

back_to_numeric <- function(string_number) {
    string_number %>% 
        str_replace(",", "") %>% 
        as.numeric()
}

covered_share_of_spanned <- {back_to_numeric(n_cy)/back_to_numeric(spanned_cy) * 100}
```

```{r itemcountry, fig.cap="Countries and Years with the Most Observations in the Source Data \\label{item_country_plots}", fig.height=3.5, fig.pos='h', cache=FALSE}
items_plot <- dcpo_input_raw1 %>%
    distinct(country, year, item) %>%
    count(item) %>%
    arrange(desc(n)) %>% 
    head(12) %>% 
    ggplot(aes(forcats::fct_reorder(item, n, .desc = TRUE), n)) +
    geom_bar(stat = "identity") +
    theme_bw() +
    theme(axis.title.x = element_blank(),
          axis.text.x  = element_text(angle = 90, vjust = .45, hjust = .95),
          axis.title.y = element_text(size = 9),
          plot.title = element_text(hjust = 0.5, size = 11)) +
    ylab("Country-Years\nObserved") +
    ggtitle("Items")

most_common_item <- dcpo_input_raw1 %>% 
    distinct(country, year, item) %>% 
    count(item) %>% 
    arrange(-n) %>% 
    slice(1) %>% 
    pull(item)

most_common_item_cy <- dcpo_input_raw1 %>%
    filter(item == most_common_item) %>%
    distinct(country, year) %>%
    nrow()

most_common_item_surveys <- dcpo_input_raw1 %>%
    filter(item == most_common_item) %>%
    distinct(survey) %>%
    pull(survey)

countries_plot <- dcpo_input_raw1 %>%
    mutate(country = if_else(stringr::str_detect(country, "United"),
                             stringr::str_replace(country, "((.).*) ((.).*)", "\\2.\\4."),
                             country)) %>% 
    distinct(country, year, item) %>% 
    count(country) %>%
    arrange(desc(n)) %>% 
    head(12) %>% 
    ggplot(aes(forcats::fct_reorder(country, n, .desc = TRUE), n)) +
    geom_bar(stat = "identity") +
    theme_bw() +
    theme(axis.title.x = element_blank(),
          axis.text.x  = element_text(angle = 90,
                                      vjust = .45,
                                      hjust = .95,
                                      size = 6),
          axis.title.y = element_text(size = 9),
          plot.title = element_text(hjust = 0.5, 
                                    size = 11)) +
    ylab("Year-Items\nObserved") +
    ggtitle("Countries")

cby_plot <- dcpo_input_raw1 %>%
    mutate(country = if_else(stringr::str_detect(country, "United"),
                             stringr::str_replace(country, "((.).*) ((.).*)", "\\2.\\4."),
                             country),
           country = stringr::str_replace(country, "South", "S.")) %>% 
    distinct(country, year) %>%
    count(country) %>% 
    arrange(desc(n)) %>% 
    head(12) %>% 
    ggplot(aes(forcats::fct_reorder(country, n, .desc = TRUE), n)) +
    geom_bar(stat = "identity") +
    theme_bw() +
    theme(axis.title.x = element_blank(),
          axis.text.x  = element_text(angle = 90,
                                      vjust = .45,
                                      hjust = .95,
                                      size = 7),
          axis.title.y = element_text(size = 9),
          plot.title = element_text(hjust = 0.5,
                                    size = 11)) +
    ylab("Years\nObserved") +
    ggtitle("Countries")


ybc_plot <- dcpo_input_raw1 %>%
    distinct(country, year) %>%
    count(year, name = "nn") %>%
    ggplot(aes(year, nn)) +
    geom_bar(stat = "identity") +
    theme_bw() +
    theme(axis.title.x = element_blank(),
          # axis.text.x  = element_text(angle = 90, vjust = .45, hjust = .95),
          axis.title.y = element_text(size = 9),
          plot.title = element_text(hjust = 0.5, size = 11)) +
    ylab("Countries\nObserved") +
    ggtitle("Years")

us_obs <- dcpo_input_raw1 %>% 
    distinct(country, year, item) %>%
    count(country) %>%
    filter(country == "United States") %>%
    pull(n)

others <- dcpo_input_raw1 %>%
    distinct(country, year, item) %>%
    count(country) %>%
    arrange(desc(n)) %>%
    slice(2:5) %>%
    pull(country) %>% 
    paste(collapse = ", ") %>% 
    str_replace(", (\\w+)$", ", and \\1") %>% 
    str_replace("United", "the United")

countries_cp <- dcpo_input_raw1 %>%
    mutate(country = if_else(stringr::str_detect(country, "United"),
                             stringr::str_replace(country, "((.).*) ((.).*)", "\\2.\\4."),
                             country),
           country = stringr::str_replace(country, "South", "S.")) %>% 
    distinct(country, year, item) %>%
    count(country) %>% 
    arrange(desc(n)) %>% 
    head(12) %>% 
    pull(country)

countries_cbyp <- dcpo_input_raw1 %>%
    mutate(country = if_else(stringr::str_detect(country, "United"),
                             stringr::str_replace(country, "((.).*) ((.).*)", "\\2.\\4."),
                             country),
           country = stringr::str_replace(country, "South", "S.")) %>% 
    distinct(country, year) %>%
    count(country) %>% 
    arrange(desc(n)) %>% 
    head(12) %>% 
    pull(country)

adding <- setdiff(countries_cbyp, countries_cp) %>% 
    knitr::combine_words()

dropping <- setdiff(countries_cp, countries_cbyp) %>% 
    knitr::combine_words()

y_peak_year <- dcpo_input_raw1 %>%
    distinct(country, year) %>%
    count(year, name = "nn") %>% 
    filter(nn == max(nn)) %>% 
    pull(year)

y_peak_nn <- dcpo_input_raw1 %>%
    distinct(country, year) %>%
    count(year, name = "nn") %>% 
    filter(nn == max(nn)) %>% 
    pull(nn)

data_poorest <- dcpo_input_raw1 %>%
    distinct(country, year, item) %>%
    count(country) %>%
    arrange(n) %>%
    filter(n == 3) %>%
    pull(country) %>% 
    knitr::combine_words()

wordify_numeral <- function(x) setNames(c("one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", " seventeen", "eighteen", "nineteen"), 1:19)[x]

n_data_poorest <- {data_poorest %>%
        str_split(",") %>% 
        first()} %>% 
    length() %>% 
    wordify_numeral()

world_map <- map_data("world") %>% 
    filter(!long > 180)

cby_map <- world_map %>% 
    distinct(region) %>% 
    mutate(country = countrycode::countrycode(region,
                                              "country.name",
                                              "country.name",
                                              warn = FALSE)) %>% 
    filter(!region=="Antarctica") %>% 
    left_join(dcpo_input_raw1 %>% 
                  count(country, year) %>% 
                  count(country, name = "Years"),
              by = "country") %>% 
    mutate(Years = ifelse(is.na(Years), 0, Years)) %>% 
    ggplot(aes(fill = Years, map_id = region)) +
    geom_map(map = world_map,
             color = "white",
             linewidth = 0.06) +
    coord_map(projection = "mollweide", 
              ylim=c(-80, 90),
              xlim=c(-170, 170)) +
    theme_void() +
    scale_fill_distiller(na.value = "gray90", 
                         palette = "Blues",
                         direction = 1) +
    ggtitle("Years Observed by Country") +
    theme(plot.title = element_text(hjust = 0.5),
          legend.position = c(.05,.1),
          legend.justification = c(0,0), 
          legend.direction = "vertical") +
    scale_y_continuous(expand=c(0,0)) +
    scale_x_continuous(expand=c(0,0))

cby_map + (countries_plot/ ybc_plot) + plot_layout(widths = c(4, 1))
```

# Conceptualizing Political Discontent {.unlisted .unnumbered}

The significance of public political discontent for the sustainability of a political system is frequently highlighted in the literature.
@lipset1959some claims that the public's belief in the suitability of the existing political system is a key "requisite" for the survival of a democratic regime.
Similarly, @miller1974political argues that a democratic political system cannot endure without majority public support, as growing political discontent increases the potential for revolutionary changes to the political and social system.
Additionally, widespread political discontent can complicate effective governance [@hetherington1998political].
These theoretical perspectives have prompted numerous analyses of the content, sources, and implications of political discontent.
However, scholars have proposed various conceptualizations or dimensions of political discontent, ranging from the lack of diffuse support for the political system to perceptions of low responsiveness, democratic deficit, low political trust, and dissatisfaction with the current government [@easton1975re; @muller1983discontent; @norris2011democratic; @jennings2016dimensions].
These differences in conceptualization reflect varying analytical purposes, theoretical motivations, and the available opinion survey items at the time.

This paper specifically defines political discontent as dissatisfaction with, or the lack of, diffuse support for the political system [@jennings2017decline].
The primary theoretical motivation for this approach lies in Easton's (1965) well-known distinction between diffuse and specific political support.
Specific support, being object-specific, refers to individuals' satisfaction with the perceived outputs or performance of the incumbent political authorities.
In contrast, diffuse support is a generalized attachment or support for the political system, serving as a "reservoir of favorable attitudes or goodwill" toward the political system and is not object-specific in nature.
The theoretical and analytical importance of this distinction is frequently noted in previous research, which found that people with low political trust or negative attitudes toward the government often do not reject the political system and prefer the existing political system to remain unchanged [@citrin1974comment; @miller1974political].
Furthermore, the literature shows that specific support is variable and less likely to pose a systemic threat to the regime's survival [@craig1981political; @muller1983discontent].
Democracy allows people to express their political dissatisfaction at the ballot box and change politicians in power without fundamentally altering the system.
On the other hand, @muller1983discontent point out that diffuse political discontent provides the public with a normative incentive to participate in radical changes to the political system as a whole.
In this regard, @jennings2017decline points out that conceptualizing political discontent as a lack of diffuse support enables researchers to examine whether there is a sustained decline in diffuse support that could pose a threat to the political system, or if there is merely a decline in specific support that is unremarkable and arguably fluctuates "normally."

Diffuse political discontent comprises several related yet distinct components: external efficacy (evaluation of the responsiveness of political authorities in general), evaluation of the trustworthiness and integrity of political authorities, and perceptions of political corruption [@craig1981political; @muller1983discontent; @park2011political].
These components are interrelated and collectively contribute to the broader construct of diffuse political discontent.
One of the main sources of this discontent is the perception that the political system is unresponsive to the public and prioritizes its own or special interests, which increases the likelihood of the public participating in or endorsing regime-challenging activities that threaten the social and political order [@craig1980mobilization; @jennings2016dimensions].
Recent studies of populism have also highlighted that the feeling of being unheard by the political system is a significant source of support for anti-system populist messages [@mudde2004populist].
Political trust, often used as a measure of political discontent, is conceptually associated with external efficacy but operates on a different dimension.
While external efficacy focuses on whether the political system functions according to public demands, political trust concerns whether political authorities work for the public good [@craig1979efficacy].
Additionally, the implications of political trust can vary depending on the specific referents of trust [@van2017political].
For instance, trust in political institutions in general, such as the political party system or politicians or the parliament in general, differs from trust in the incumbent government, which is a measure of specific support, or trust in apolitical institutions such as the judiciary or the police.
In this context, we consider only distrust in general political institutions as a component of political discontent.
Similarly, dissatisfaction with political parties or national officeholders in general is also used as a component of political discontent.
Lastly, recent literature emphasizes the perception of political corruption as a primary source of political discontent, as people perceive political authorities working for their own interests without addressing public demands [@park2011political; @busby2018activating; @hawkins2020activation].

It is also worth discussing what is not considered a component of diffuse political discontent.
Specifically, we exclude political trust in the incumbent government or apolitical institutions, as trust in the government is a type of specific support that fluctuates over time and does not pose a serious threat to the political system [@norris1999critical].
Additionally, unlike previous studies that use support for democracy in the abstract as a predictor for the survival of democratic regimes [@claassen2020does], we do not include it as a component of political discontent.
This is because support for democracy in the abstract is too prevalent in every country to be a meaningful or analytically useful measure of political discontent [@dalton2007understanding; @inglehart2003solid].
Lastly, we exclude satisfaction with democracy (SWD) in the abstract because the literature shows that the SWD measure functions more as a type of specific support.
People tend to have much higher democratic satisfaction when their preferred politicians or parties win elections, while electoral losers tend to have lower democratic satisfaction [@van2020long; @singh2023satisfaction].
Moreover, @quaranta2016does indicate that various economic indicators, such as the unemployment rate, GDP growth, inflation, or subjective economic evaluation, are strongly associated with the public's satisfaction with democracy, suggesting that it is a product of the government's economic performance.

The conceptualization of political discontent as a lack of diffuse support for the political system has important implications.
First, by focusing on the systemic dimension of political discontent and excluding types of specific support or abstract support for democracy, this conceptualization aligns closely with discussions about the erosion of public confidence in the political system as a whole, beyond mere dissatisfaction with specific authorities or policies.
This understanding is crucial for identifying the underlying causes of political disaffection and developing targeted interventions to address them.
Moreover, this conceptualization of political discontent can contribute to recent discussions about democratic backsliding.
The literature on democratic backsliding has yielded mixed findings regarding whether public opinion can influence the possibility of backsliding [@Tai2024].
However, previous studies often use abstract public support for democracy as a measurement, which is less satisfying because abstract support for democracy is notoriously affirming.
In this context, political discontent, defined as a lack of diffuse support for the system [@claassen2020does], can serve as a better conceptual tool for discussing how public opinion relates to democratic backsliding.
Additionally, previous studies have shown that diffuse political discontent is strongly associated with citizens participating in or endorsing regime-challenging activities, which ultimately pose a threat to the social and political order [@craig1980mobilization].
A clearer understanding of the nature and consequences of diffuse political discontent can thus inform efforts to strengthen democratic resilience and responsiveness in the face of growing public disaffection with political systems worldwide.
For this, this paper measures political discontent cross-nationally and further examines various sources of political discontent.

# Estimates {.unlisted .unnumbered}

```{r dcpo_input, eval=FALSE, include=FALSE, results=FALSE}
dcpo_input <- DCPOtools::format_dcpo(dcpo_input_raw1,
                                     scale_q = "big2",
                                     scale_cp = 1)
save(dcpo_input, file = here::here("data", "dcpo_input.rda"))
```

```{r dcpo, eval=FALSE, include=FALSE, results=FALSE}
iter <- 1000

dcpo <- paste0(.libPaths(), "/DCPO/stan/dcpo.stan")[1] |> 
    cmdstan_model()

dcpo_output <- dcpo$sample(
    data = dcpo_input[1:13], 
    max_treedepth = 14,
    adapt_delta = 0.99,
    step_size = 0.005,
    seed = 324, 
    chains = 4, 
    parallel_chains = 4,
    iter_warmup = iter/2,
    iter_sampling = iter/2,
    refresh = iter/50
)

results_path <- here::here(file.path("data", 
                                     iter, 
                                     {str_replace_all(Sys.time(),
                                                      "[- :]",
                                                      "") %>%
                                             str_replace("\\d{2}.\\d+$",
                                                         "")}))

dir.create(results_path, 
           showWarnings = FALSE, 
           recursive = TRUE)

dcpo_output$save_data_file(dir = results_path,
                           random = FALSE)
dcpo_output$save_output_files(dir = results_path,
                              random = FALSE)
```

```{r dcpo_output, eval=FALSE}
if (!exists("results_path")) {
    latest <- "202405120647"
    results_path <- here::here("data", "1000", latest)
    
    # Define OSF_PAT in .Renviron: https://docs.ropensci.org/osfr/articles/auth
    if (!file.exists(file.path(results_path, paste0("dcpo-", str_extract(latest, "\\d{12}"), "-1.csv")))) {
        dir.create(results_path,
                   showWarnings = FALSE,
                   recursive = TRUE)
        osf_retrieve_node("hdsfr") %>%
            osf_ls_files() %>%
            filter(str_detect(name, str_extract(latest, "\\d{12}"))) %>%
            osf_download(path = here::here("data", "1000"))
    }
    
    dcpo_output <- as_cmdstan_fit(here::here(results_path,
                                             list.files(results_path,
                                                        pattern = "csv$")))  
}

load(file = here::here("data", "dcpo_input.rda"))

theta_summary <- DCPOtools::summarize_dcpo_results(dcpo_input,
                                                   dcpo_output,
                                                   "theta") %>% 
    mutate(across(mean:q90, ~ .x*100))

save(theta_summary, file = here::here("data",
                                      "theta_summary.rda"))

theta_results <- extract_dcpo_results(dcpo_input,
                                      dcpo_output,
                                      par = "theta") %>% 
    mutate(theta = theta*100)

save(theta_results, file = here::here("data",
                                      "theta_results.rda"))

alpha_results <- summarize_dcpo_results(dcpo_input,
                                        dcpo_output = dcpo_output,
                                        pars = "alpha") %>% 
    transmute(item = question,
              dispersion = mean)

beta_results <- summarize_dcpo_results(dcpo_input,
                                       dcpo_output,
                                       "beta") %>% 
    group_by(question) %>% 
    summarize(difficulties0 = paste0(sprintf("%.2f", round(mean, 2)),
                                     collapse = ", ")) %>% 
    mutate(item = question,
           cp = if_else(str_detect(item, "threestate"),
                        2, 
                        as.numeric(str_extract(item, "\\d+")) - 1),
           term = str_glue("(( ?-?[0-9].[0-9][0-9]?,?){{{cp}}})"),
           difficulties = str_extract(difficulties0, 
                                      term) %>%
               str_replace(",$", "") %>% 
               str_trim()) %>% 
    transmute(item, difficulties)

save(alpha_results,
     beta_results,
     file = here::here("data",
                       "item_results.rda"))
```

```{r theta}
load(here::here("data",
                "theta_results.rda"))

load(here::here("data",
                "theta_summary.rda"))

res_cy <- nrow(theta_summary) %>% 
    scales::comma()

res_c <- theta_summary %>% 
    pull(country) %>% 
    unique() %>% 
    length()
```

```{r cs, fig.cap="PD Scores, Most Recent Available Year \\label{cs_mry}", fig.height=10, fig.width=8}
n_panes <- 2
axis_text_size <- 10

p1_data <- theta_summary %>%
    group_by(country) %>%
    top_n(1, year) %>%
    ungroup() %>%
    arrange(mean) %>%
    transmute(country_year = paste0(country, " (", year, ")") %>% 
                  str_replace("’", "'"),
              estimate = mean,
              conf.high = q90,
              conf.low = q10,
              pane = n_panes - (ntile(mean, n_panes) - 1),
              ranked = as.factor(ceiling(row_number())))

p_theta <- ggplot(p1_data,
                  aes(x = estimate, y = ranked)) +
    geom_segment(aes(x = conf.low, xend = conf.high,
                     y = ranked, yend = ranked),
                 na.rm = TRUE,
                 alpha = .4) +
    geom_point(fill = "black", shape = 21, size = .5, na.rm = TRUE) +
    theme_bw() + 
    theme(legend.position="none",
          axis.text.x  = element_text(size = axis_text_size,
                                      angle = 90,
                                      vjust = .45,
                                      hjust = .95),
          axis.text.y  = element_text(size = axis_text_size),
          axis.title = element_blank(),
          strip.background = element_blank(), 
          strip.text = element_blank(),
          panel.grid.major = element_line(linewidth = .3),
          panel.grid.minor = element_line(linewidth = .15)) +
    scale_y_discrete(breaks = p1_data$ranked, labels=p1_data$country_year) +
    coord_cartesian(xlim=c(0, 100)) +
    facet_wrap(vars(pane), scales = "free", nrow = 1)


p_theta +
    plot_annotation(caption = "Note: Gray whiskers represent 80% credible intervals.")

bottom5 <- p1_data %>% 
    arrange(ranked) %>% 
    slice(1:5) %>% 
    pull(country_year) %>% 
    str_replace(" \\(.*", "") %>% 
    knitr::combine_words()

```

```{r ts, fig.cap="Political Discontent Scores Over Time Within OECD Democracies \\label{ts}", fig.height=9}

load(here::here("data", "theta_summary.rda"))

oecd_countries <- c("Australia", "Austria", "Belgium",
                    "Canada", "Chile", "Colombia",
                    "Costa Rica", "Czechia", "Denmark",
                    "Estonia", "Finland", "France", 
                    "Germany", "Greece", "Hungary",
                    "Iceland", "Ireland", "Israel",
                    "Italy", "Japan", "South Korea",
                    "Latvia", "Lithuania", "Luxembourg",
                    "Mexico", "Netherlands", "New Zealand",
                    "Norway", "Poland", "Portugal", 
                    "Slovakia", "Slovenia", "Spain",
                    "Sweden", "Switzerland", "Turkey", 
                    "United Kingdom", "United States")

c_res <- theta_summary %>% 
    filter(country %in% oecd_countries) %>%
    group_by(country) %>% 
    mutate(last_mean = last(mean)) %>% 
    ungroup() %>% 
    mutate(country = fct_reorder(country, last_mean, .desc = TRUE))

ggplot(data = c_res, aes(x = year, y = mean)) +
    theme_bw() +
    theme(legend.position = "none") +
    coord_cartesian(xlim = c(1968, 2024), ylim = c(0, 100)) +
    labs(x = NULL, y = "Political Discontent") +
    geom_ribbon(data = c_res, aes(ymin = q10, ymax = q90, linetype=NA), alpha = .25) +
    geom_line(data = c_res) +
    facet_wrap(~country, ncol = 5) +
    theme(axis.text.x  = element_text(size=7,
                                      angle = 90,
                                      vjust = .45,
                                      hjust = .95),
          strip.background = element_rect(fill = "white", colour = "white")) +
    plot_annotation(caption = "Note: Countries are ordered by their most recent political discontent score; gray shading represents 80% credible intervals.")
```

# Validating Public Political Discontent {.unlisted .unnumbered}

That we can *generate* estimates of political discontent does not automatically mean that they are suitable for analysis.
Validation tests of this novel latent variable, like for any new measure, are crucial [see, e.g., @Hu2023].
@fig-int-convergent, @fig-ext-convergent, and @fig-construct provide evidence of this measure's validity with tests of convergent validation and construct validation.

```{r int_convergent_val_dat}
internal_tscs_dat <- dcpo_input_raw1 %>% 
  filter(item == "trust_parties2") %>%  
  mutate(title = "Eurobarometer",
         neg = FALSE)

internal_cs_dat <- dcpo_input_raw1 %>% 
  filter(survey == "gallup_vop2005") %>%  
  mutate(title = "Gallup Voice of\nthe People, 2005",
         neg = FALSE)

internal_ts_dat <- dcpo_input_raw1 %>% 
  filter(item == "trust_parl5" & country == "Sweden") %>%  
  mutate(title = "Sweden",
         neg = FALSE)
```

```{r int_convergent, fig.height = 3.5, fig.cap = "Internal Convergent Validation: Correlations Between Public Political Discontent and Individual Source-Data Survey Items"}
#| label: fig-int-convergent

load(here("data", "theta_summary.rda"))
load(here("data", "theta_results.rda"))

internal_tscs_plot <- validation_plot(internal_tscs_dat,
                                lab_x = 15,
                                lab_y = 95) +
  theme_bw() +
  theme(legend.position="none",
        axis.text  = element_text(size=8),
        axis.title = element_text(size=9),
        plot.title = element_text(hjust = 0.5, size = 8),
        strip.background = element_blank()) +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
  labs(x = "PPD Score",
       y = "% Who 'Tend Not to Trust' Political Parties")

internal_cs_plot <- validation_plot(internal_cs_dat,
                                lab_x = 15,
                                lab_y = 95) +
  theme_bw() +
  theme(legend.position="none",
        axis.text  = element_text(size=8),
        axis.title = element_text(size=9),
        plot.title = element_text(hjust = 0.5, size = 8),
        # strip.text.x = element_text(size=5),
        strip.background = element_blank()) +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
  labs(x = "PPD Score",
       y = "% Disagreeing that Their 'Country\nis Governed by the Will of the People'")

internal_ts_plot <- validation_plot(internal_ts_dat,
                                    lab_x = 1990,
                                    lab_y = 95) +
  theme_bw() +
  theme(legend.position="none",
        axis.text  = element_text(size=8),
        axis.title = element_text(size=9),
        plot.title = element_text(hjust = 0.5, size = 9),
        strip.background = element_blank()) +
  coord_cartesian(ylim = c(0,100),
                  xlim = c(1985, 2020)) +
  labs(x = "Year",
       y = "Score") +
  annotate("text", x = 2010, y = 10, size = 2,
           label = 'SOM') +
  annotate("text", x = 2000, y = 59, size = 2,
           label = "PPD Score")

internal_tscs_plot + internal_cs_plot + internal_ts_plot  +
  patchwork::plot_annotation(caption = "Note: Gray whiskers and shading represent 80% credible intervals.")
```

```{r ext_convergent_val_dat, results=FALSE}
ext_dat <- read_csv(here("data-raw",
                         "surveys_ext_conv.csv"),
                    col_types = "cccccc") %>% 
    DCPOtools::dcpo_setup(datapath = here("..",
                                          "data",
                                          "dcpo_surveys"),
                          file = here("data",
                                      "ext_conv_dat.csv"))
```

```{r ext_convergent_dat, results=FALSE}
ext_dat <- read_csv(here("data",
                         "ext_conv_dat.csv"),
                    col_types = "cdcddcd")

ext_issp_dem_dat <- ext_dat %>%
  filter(str_detect(item, "pride_dem4")) %>% 
  mutate(title = "ISSP:\nNational Identity",
         neg = FALSE)

ext_wvs_dat <- ext_dat %>%
  filter(str_detect(survey, "[ew]vs")) %>% 
  mutate(title = "WVS & EVS",
         neg = FALSE)

ext_cses_dat <- ext_dat %>%
  filter(str_detect(survey, "cses")) %>% 
  mutate(title = "CSES",
         neg = FALSE)
```

```{r ext_convergent, fig.cap="External Convergent Validation: Correlations Between PPD Scores and Evaluations of Democratic Performance", fig.height=3.5}
#| label: fig-ext-convergent

ext_issp_dem_plot <- validation_plot(ext_issp_dem_dat,
                                     lab_x = 20,
                                     lab_y = 5) +
    theme_bw() +
    theme(legend.position="none",
          axis.text  = element_text(size=8),
          axis.title = element_text(size=9),
          plot.title = element_text(hjust = 0.5, size = 9),
          strip.background = element_blank()) +
    coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
    labs(x = "PPD Score",
         y = "% Who Are 'Somewhat' or 'Very'\nProud of 'the Way Democracy Works'")

ext_wvs_plot <- validation_plot(ext_wvs_dat,
                                lab_x = 20,
                                lab_y = 5) +
    theme_bw() +
    theme(legend.position="none",
          axis.text  = element_text(size=8),
          axis.title = element_text(size=9),
          plot.title = element_text(hjust = 0.5, size = 9),
          strip.background = element_blank()) +
    coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
    labs(x = "PPD Score",
         y = "% Who Are 'Rather' or 'Very' Satisfied\n'With the Way Democracy is Developing'")

ext_cses_plot <- validation_plot(ext_cses_dat,
                                 lab_x = 20,
                                 lab_y = 5) +
    theme_bw() +
    theme(legend.position="none",
          axis.text  = element_text(size=8),
          axis.title = element_text(size=9),
          plot.title = element_text(hjust = 0.5, size = 9),
          strip.background = element_blank()) +
    coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
    labs(x = "PPD Score",
         y = "% Who Are 'Fairly' or 'Very' Satisfied\n'With the Way Democracy Works'")

ext_issp_dem_plot + ext_wvs_plot + ext_cses_plot +
  plot_annotation(
    caption = "Note: Gray whiskers represent 80% credible intervals.")
```

Convergent validation refers to tests of whether a measure is empirically associated with alternative indicators of the same concept [@Adcock2001, 540].
Here, @fig-int-convergent offers 'internal' convergent validation tests [@Caughey2019, 686]: it compares PPD scores to responses to the individual source-data survey items that were used to generate them.
On the left, PPD scores are plotted against the percentage of respondents across all country-years who responded "tend not to trust" rather than "tend to trust" to the Eurobarometer's dichotomous question, "How much trust do you have in certain institutions: Political parties?" This is the single most-asked item in the source data.
The middle panel compares PPD scores to responses to the question with the most data-rich cross-section, "Would you say your country is governed by the will of the people?" in Gallup's 2005 Voice of the People survey.
Finally, the right panel evaluates how well the PPD scores capture change over time by focusing on the item with the largest number of observations for a single country in the source data: Sweden's SOM surveys' question, "How much confidence do you have in the way the following institutions and groups do their job: The National Parliament?" In all three cases, the correlations, estimated taking into account the uncertainty in the measures, are strong.

In @fig-ext-convergent, we present three 'external' convergent validation tests, comparing PPD scores to responses to survey items that were *not* included in the source data: items that asked respondents to evaluate "democracy" in their countries.
We excluded these questions so as to avoid assuming that respondents conflate the current political system of their country with democracy.
Nevertheless, evaluations of the democracy of respondents' countries provide good alternate indicators of the extent of political discontent.
The left panel shows data from three rounds of the International Social Survey Program's National Identity module, which asked respondents how proud they were of how democracy works in their country.
In the center, we plot how much satisfaction respondents reported with "the way democracy is developing" in their countries in the World Values Surveys and European Values Surveys.
The right draws on data from the Comparative Study of Electoral Systems about how many respondents were at least fairly satisfied "with the way democracy works" in their country.
Across countries and years and all three of these survey items, our latent-variable measure of political discontent is strongly negatively correlated with aggregate positive evaluations of democracy.

```{r construct_val_dat, results=FALSE}
construct_dat <- read_csv(here("data-raw",
                               "surveys_construct.csv"),
                          col_types = "cccccc") %>% 
    DCPOtools::dcpo_setup(datapath = here("..",
                                          "data",
                                          "dcpo_surveys"),
                          file = here("data",
                                      "construct_dat.csv"))
```

```{r construct_dat}
construct_dat <- read_csv(here("data",
                               "construct_dat.csv"),
                          col_types = "cdcddcd")

construct_hc_dat <- construct_dat %>%
  filter(str_detect(item, "hc")) %>% 
  mutate(title = "",
         neg = FALSE)

construct_env_dat <- construct_dat %>%
  filter(str_detect(item, "env")) %>% 
  mutate(title = "",
         neg = FALSE)

construct_old_dat <- construct_dat %>%
  filter(str_detect(item, "old")) %>% 
  mutate(title = "",
         neg = FALSE)

```

```{r construct, fig.cap="Construct Validation: Correlations Between PPD Scores and Views of Government Success", fig.height=3.5}
#| label: fig-construct

construct_hc_plot <- validation_plot(construct_hc_dat,
                                    lab_x = 20,
                                    lab_y = 95) +
  theme_bw() +
  theme(legend.position="none",
        axis.text  = element_text(size=8),
        axis.title = element_text(size=9),
        plot.title = element_text(hjust = 0.5, size = 9),
        strip.background = element_blank()) +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
  labs(x = "PPD Score",
       y = "% Who Say Government is 'Quite' or 'Very'\nSuccessful in Providing Health Care")

construct_old_plot <- validation_plot(construct_old_dat,
                                       lab_x = 20,
                                       lab_y = 95) +
  theme_bw() +
  theme(legend.position="none",
        axis.text  = element_text(size=8),
        axis.title = element_text(size=9),
        plot.title = element_text(hjust = 0.5, size = 9),
        strip.background = element_blank()) +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
  labs(x = "PPD Score",
       y = "% Who Say Government is 'Quite' or 'Very'\nSuccessful in Providing for the Elderly")

construct_env_plot <- validation_plot(construct_env_dat,
                                       lab_x = 20,
                                       lab_y = 95)  +
  theme_bw() +
  theme(legend.position="none",
        axis.text  = element_text(size=8),
        axis.title = element_text(size=9),
        plot.title = element_text(hjust = 0.5, size = 9),
        strip.background = element_blank()) +
  coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
    labs(x = "PPD Score",
         y = "% Who Say Government is 'Quite' or 'Very'\nSuccessful in Protecting the Environment")

construct_hc_plot + construct_old_plot + construct_env_plot +
  plot_annotation(
    caption = str_wrap("Note: Gray whiskers represent 80% credible intervals. Data from ISSP Role of Government surveys, 2006 and 2016.", 80))
```

With the success of these tests of convergent validation, we turn to construct validation.
Construct validation refers to demonstrating that the tested measure is empirically associated with measures of *other* concepts believed causally related to the concept the measure seeks to represent [@Adcock2001, 542].
Discontent with the political system should be closely tied to evaluations of recent government policy performance.

@fig-construct depicts the relationships between PPD and three survey items from the WVS and EVS on other aspects of political engagement that are expected to have causal relationships with political interest [see @Kittilson2010, 995]: in the left panel, following political news on television, radio, and newspapers; in the center panel, discussing politics with friends; and on the right, feeling politics is important to one's life.
These relationships are all positive and are moderate to strong.
The PPD scores perform very well in validation tests.

# Explaining Political Dissatisfaction {.unlisted .unnumbered}
How to explain these disparities in public political discontents across countries? What are the drivers of the changes over years?
The literature presents various perspectives on how political and economic contexts may affect public political discontent.
The first argument deals with the role of election.
Elections provide an opportunity for people to turning their dissatisfaction into ballots for candidates or parties that promise changes to the system.
Discontented citizens, as a result, gain political fulfillment through voting for a party voicing their discontents [@van2003lpf; @rooduijn2016expressing].
From this perspective, public political discontent should be expected to be lower in years of national elections, in which some of the existing discontent could be ameliorated.
However, existing studies also suggest that the effect of election time on public political discontent could be the opposite.
Campaigns expose citizens to more political messages, a significant proportion of which criticize the elites and the system [@lau2007effects; @lopez2019political].
Particularly, many advanced democracies are experiencing increased levels of false information during elections, which has become a clear danger to the integrity of political process [@bennett2018disinformation].
If so, public political discontent may be expected to be higher at election times.

A second potential source of public political discontent is the distribution of power created by political institutions.
According to prominent democratic theories [@norris2008driving; @lijphart1999patterns; @powell2000elections], power-sharing systems---parliamentarism, federalism, and proportional electoral rules---aim to generate governments that facilitate broad inclusion and participation, while power-concentrating systems prioritize efficient and accountable majority rule.
@kittilson2010engaging argues that power-sharing systems not only encourage actual political participation, but also send symbolic signals of inclusiveness to citizens.
If so, the publics in countries with parliamentary systems, federalism, and proportional electoral rules should be more likely to perceive themselves as being included and represented in the system and so feel less discontent.

Lastly, economic conditions are argued to be salient sources of political discontent [@quaranta2016does].
For one thing, unfavorable economic conditions fuel social discontent and anxiety about the future among the public, which can easily evolve into anti-establishment sentiment [@kinnvall2022exploring].
For another, economic indicators are usually used by people to evaluate the performance of the system or government policies [@becher2013economic].
Hence, poor economic conditions, such as slow growth, high unemployment, and significant income disparities are likely to hurt perceptions of institutional quality and so increase public political discontent.

The data we use to test these hypotheses are as follows.
The Democratic Electoral Systems (DES) dataset updated in @Bormann2022 provides information about the timing of elections, yielding a dichotomous variable coded one in election years and zero when no election was held.
We measure three institutional variables in the same fashion as @Kittilson2010.
Parliamentarism is coded dichotomously, coded one in pure parliamentary systems and zero otherwise, and is sourced from the DES.
The federalism variable is also dichotomous: countries with strong federal systems [see @Lijphart1999] are coded one and all others coded zero.
The Gallagher least-squares index of disproportionality, which measures the disparity between parties' vote shares and their seat shares [@Gallagher1991, 40-41; @Gallagher2023], provides our measure of the proportionality of the electoral system.
We draw data on economic conditions from two sources.
GDP per capita, national GDP growth, and unemployment are from OECD.Stat [@OECD2024].
The Gini index of disposable income inequality comes from the Standardized World Income Inequality Database [@Solt2020].

```{r des_download}
if (!file.exists(here("data-raw", "es_data-v41", "es_data-v4_1.csv"))) {
    dir.create(here("data-raw", "es_data-v41"))
    download.file("http://mattgolder.com/files/research/es_v4_codebook.pdf",
                  here("data-raw", "es_data-v41", "es_v4_codebook.pdf"))
    download.file("http://mattgolder.com/files/research/es_data-v41.zip",
                  here("data-raw", "es_data-v41", "es_data-v41.zip"))
    unzip(here("data-raw", "es_data-v41", "es_data-v41.zip"),
          exdir = here("data-raw", "es_data-v41"))
}
```

```{r des}
des_data <- vroom::vroom(here("data-raw",
                              "es_data-v41",
                              "es_data-v4_1.csv"),
                         guess_max = 5000,
                         show_col_types = FALSE) %>% 
    mutate(country = countrycode(country,
                                 origin = "country.name",
                                 destination = "country.name",
                                 custom_match = c("Serbia & Montenegro" =
                                                      "Serbia",
                                                  "The Co-operative Republic of Guyana" = "Guyana"))) %>% 
    filter(country %in% oecd_countries &
               year >= 1968) %>% 
    arrange(country, year) %>% 
    fill() %>% 
    group_by(country, year) %>% 
    summarize(regime = first(regime))
```

```{r disp}
if (!file.exists(here::here("data", "gallagher_data.rda"))) {
    if (!file.exists(here("data-raw", "ElectionIndices.pdf"))) {
        download.file("https://www.tcd.ie/Political_Science/about/people/michael_gallagher/ElSystems/Docts/ElectionIndices.pdf",
                      here("data-raw", "ElectionIndices.pdf"))
    }
    
    if (!file.exists(here("data-raw", "Disproportionality.csv"))) {
        download.file("https://raw.githubusercontent.com/christophergandrud/Disproportionality_Data/master/Disproportionality.csv", 
                      here("data-raw", "Disproportionality.csv"))
    }
    
    disp_add <- rio::import(here("data-raw", "Disproportionality.csv")) %>% 
        filter((country == "Korea, Republic of" & year < 2000) |
                   (country == "Colombia")) %>% 
        select(country, year, lsq = disproportionality) %>% 
        mutate(country = countrycode(country, "country.name", "country.name"))
    
    gallagher0 <- map(5:49, ~ extract_tables(here("data-raw",
                                                  "ElectionIndices.pdf"),
                                             pages = .x, output = "matrix") %>%
                          map(\(x) as_tibble(x, .name_repair = "unique")) %>%
                          list_rbind()) %>% 
        list_rbind()
    
    gallagher <- gallagher0 %>% 
        mutate(...1 = case_when(...1 == "Republic" ~ "Dominican Rep",
                                ...1 == "Ireland LSq" ~ "Northern Ireland",
                                ...1 == "Kingdom" ~ "United Kingdom",
                                ...1 == "(House)" ~ "United States",
                                ...1 == "Scotland" ~ "Scotland",
                                ...1 == "Barbuda" ~ "Antigua & Barbuda",
                                ...1 == "Hercegovina" ~ "Bosnia",
                                TRUE ~ ...1),
               country = countrycode(...1, "country.name", "country.name",
                                     warn = FALSE),
               country = case_when(...1 == "elections" ~ "Ireland EP",
                                   ...1 == "college)" ~ "U.S. Electoral College",
                                   ...1 == "Ireland LSq" ~ "Northern Ireland",
                                   ...1 == "Wales" ~ "Wales",
                                   ...1 == "Principe" ~ "Principe",
                                   TRUE ~ country),
               country2 = country) %>% 
        fill(country) %>% 
        filter(is.na(country2) & !...1 == "See Notes.") %>% 
        separate_wider_delim(...1, 
                             delim = " ", 
                             names = c("year", "info"),
                             too_few = "align_start",
                             too_many = "merge") %>% 
        mutate(lsq = str_replace_all(info, "[^\\d.]", ""),
               ...2 = if_else(...2 == "", lsq, ...2),
               month = str_extract(info, "[A-Z][a-z]{2}\\b") %>% 
                   base::match(month.abb)) %>% 
        filter((is.na(info) | !str_detect(info, "PR|list|SMD|SMP")) ) %>% 
        transmute(country = country,
                  year = as.numeric(year),
                  lsq = as.numeric(...2),
                  info = info,
                  month = month) %>% 
        filter(!is.na(lsq)) %>% 
        bind_rows(disp_add) %>% 
        group_by(country, year) %>% 
        arrange(country, -year, -month) %>% 
        distinct(country, year, .keep_all = TRUE) %>% 
        arrange(country, year) %>% 
        select(country, year, lsq)
    
    rio::export(gallagher, here::here("data", "gallagher_data.rda"))
} else {
    gallagher <- rio::import(here::here("data", "gallagher_data.rda"))
}    
```

```{r oecd}
if (!file.exists(here::here("data-raw", "oecd_data.rda"))) {
    
    oecd_growth_link <- "https://stats.oecd.org/restsdmx/sdmx.ashx/GetData/SNA_TABLE1/AUS+AUT+BEL+CAN+CHL+COL+CRI+CZE+DNK+EST+FIN+FRA+DEU+GRC+HUN+ISL+IRL+ISR+ITA+JPN+KOR+LVA+LTU+LUX+MEX+NLD+NZL+NOR+POL+PRT+SVK+SVN+ESP+SWE+CHE+TUR+GBR+USA.B1_GE.G/all?startTime=1980&endTime=2023"
    
    oecd_growth <- oecd_growth_link %>% 
        readSDMX() %>% 
        as_tibble() %>% 
        transmute(country = countrycode(LOCATION, "iso3c", "country.name"),
                  year = as.numeric(obsTime),
                  growth = obsValue)
    
    oecd_unemployment_link <- "https://stats.oecd.org/restsdmx/sdmx.ashx/GetData/LFS_SEXAGE_I_R/AUS+AUT+BEL+CAN+CHL+COL+CRI+CZE+DNK+EST+FIN+FRA+DEU+GRC+HUN+ISL+IRL+ISR+ITA+JPN+KOR+LVA+LTU+LUX+MEX+NLD+NZL+NOR+POL+PRT+SVK+SVN+ESP+SWE+CHE+TUR+GBR+USA.MW.1564.UR.A/all?startTime=1980&endTime=2023"
    
    oecd_unemp <- oecd_unemployment_link %>% 
        readSDMX() %>% 
        as_tibble() %>% 
        transmute(country = countrycode(COUNTRY, "iso3c", "country.name"),
                  year = as.numeric(obsTime),
                  unemployment = obsValue)
    
    oecd_inflation_link <- "https://stats.oecd.org/restsdmx/sdmx.ashx/GetData/PRICES_CPI/AUS+AUT+BEL+CAN+CHL+COL+CRI+CZE+DNK+EST+FIN+FRA+DEU+GRC+HUN+ISL+IRL+ISR+ITA+JPN+KOR+LVA+LTU+LUX+MEX+NLD+NZL+NOR+POL+PRT+SVK+SVN+ESP+SWE+CHE+TUR+GBR+USA.CPALTT01.GY.A/all?startTime=1980&endTime=2023"
    
    oecd_inf <- oecd_inflation_link %>% 
        readSDMX() %>% 
        as_tibble() %>% 
        transmute(country = countrycode(LOCATION, "iso3c", "country.name"),
                  year = as.numeric(obsTime),
                  inflation = obsValue)
    
    oecd_gdppc_link <- "https://stats.oecd.org/restsdmx/sdmx.ashx/GetData/SNA_TABLE1/AUS+AUT+BEL+CAN+CHL+COL+CRI+CZE+DNK+EST+FIN+FRA+DEU+GRC+HUN+ISL+IRL+ISR+ITA+JPN+KOR+LVA+LTU+LUX+MEX+NLD+NZL+NOR+POL+PRT+SVK+SVN+ESP+SWE+CHE+TUR+GBR+USA.B1_GE.HVPVOB/all?startTime=1980&endTime=2023"
    
    oecd_gdppc <- oecd_gdppc_link %>% 
        readSDMX() %>% 
        as_tibble() %>% 
        transmute(country = countrycode(LOCATION, "iso3c", "country.name"),
                  year = as.numeric(obsTime),
                  gdppc = obsValue)
    
    oecd <- oecd_gdppc %>% 
        left_join(oecd_growth, by = c("country", "year")) %>% 
        left_join(oecd_unemp, by = c("country", "year")) %>% 
        left_join(oecd_inf, by = c("country", "year")) %>% 
        group_by(country) %>% 
        mutate(across(gdppc:inflation,
                      ~ imputeTS::na_interpolation(.x)))
    
    rio::export(oecd, here::here("data-raw", "oecd_data.rda"))
} else {
    oecd <- rio::import(here::here("data-raw", "oecd_data.rda"))
}
```

```{r swiid_data}
if (!file.exists(here("data-raw",
                      "swiid9_6",
                      "swiid9_6_summary.csv"))) {
    download.file("https://dataverse.harvard.edu/api/access/datafile/7878619", "data-raw/swiid9_6.zip")
    unzip(here("data-raw", "swiid9_6.zip"), exdir = here("data-raw"))
    file.remove(here("data-raw", "swiid9_6.zip"))
}

swiid_summary <- read_csv(here("data-raw",
                               "swiid9_6",
                               "swiid9_6_summary.csv"),
                          col_types = "cddddddddd") %>% 
    mutate(country = countrycode::countrycode(country,
                                              "country.name",
                                              "country.name",
                                              warn = FALSE)) %>% 
    select(country, year, gini_disp, gini_disp_se)
```

```{r data_combo}
if (!file.exists(here::here("data", "data_combo.rda"))) {
    data_combo <- theta_summary %>% 
        filter(country %in% oecd_countries) %>% 
        group_by(country) %>% 
        group_modify(~ add_row(.x, year = 0:4, .before = 0)) %>%
        mutate(year = case_when(year == 0 ~ lead(year, 5) - 5,
                                year == 1 ~ lead(year, 4) - 4,
                                year == 2 ~ lead(year, 3) - 3,
                                year == 3 ~ lead(year, 2) - 2,
                                year == 4 ~ lead(year, 1) - 1,
                                TRUE ~ year)) %>% 
        left_join(des_data, by = c("country", "year")) %>%
        left_join(gallagher,
                  by = c("country", "year")) %>% 
        mutate(parl = if_else(regime == 0, 1, 0),
               election = as.numeric(!is.na(regime) | !is.na(lsq))) %>% 
        select(-regime) %>% 
        fill(parl, .direction = "downup") %>% 
        left_join(oecd,
                  by = c("country", "year")) %>% 
        left_join(swiid_summary,
                  by = c("country", "year")) %>% 
        fill(lsq) %>% 
        drop_na(mean:gini_disp_se) %>% 
        mutate(federal = as.numeric(country %in% c("Australia", # decentralized = strong
                                                   "Belgium",
                                                   "Canada",
                                                   "Germany",
                                                   "Mexico",
                                                   "Switzerland",
                                                   "United States")),
               lsq_mean = mean(lsq),
               lsq_diff = lsq - lsq_mean,
               gini_mean = mean(gini_disp),
               gini_mean_se = sqrt(sum(gini_disp_se^2))/
                   length(gini_disp),
               gini_diff = (gini_disp - gini_mean),
               gini_diff_se = sqrt(gini_disp_se^2 + gini_mean_se^2)/2,
               gdppc_mean = mean(gdppc/1000),
               gdppc_diff = gdppc/1000 - gdppc_mean,
               growth_mean = mean(growth),
               growth_diff = growth - growth_mean,
               recession = if_else(growth >= 0, 0, 1),
               unemploy_mean = mean(unemployment),
               unemploy_diff = unemployment - unemploy_mean,
               inflation_mean = mean(inflation),
               inflation_diff = inflation - inflation_mean) %>% 
        ungroup()
    
    rio::export(data_combo, here::here("data", "data_combo.rda"))
} else {
    data_combo <- rio::import(here::here("data", "data_combo.rda"))
}
```

```{r m1, include=FALSE}
if (!file.exists(here::here("data", "results_m1.rda"))) {
    m1 <- brm(
        formula = bf(
            mean | mi(sd) ~ year +
                election +
                parl +
                federal +
                lsq_mean + lsq_diff +
                gdppc_mean + gdppc_diff +
                growth_mean + growth_diff +
                unemploy_mean + unemploy_diff +
                me(gini_mean, gini_mean_se) +
                me(gini_diff, gini_diff_se) +
                (1 | country) + (1 | year)
        ),
        data = data_combo,
        backend = "cmdstanr",
        warmup = 1000,
        iter = 2000,
        chains = 4,
        cores = parallel::detectCores(),
        seed = 324
    )
    
    doubled_sd_m1 <- m1$data %>% 
        select(-mean, -sd,
               -country, -ends_with("_se")) %>% 
        summarize(across(everything(), by2sd)) %>% 
        pivot_longer(everything()) %>% 
        transmute(`.variable` = case_when(name == "gini_mean" ~ 
                                              "bsp_megini_meangini_mean_se",
                                          name == "gini_diff" ~
                                              "bsp_megini_diffgini_diff_se",
                                          TRUE ~ paste0("b_", name)),
                  var_names = c("Time Trend",
                                "Election Year",
                                "Parliamentarism",
                                "Federalism",
                                "Disproportionality, Mean",
                                "Disproportionality, Difference",
                                "GDPpc, Mean",
                                "GDPpc, Difference",
                                "GDP Growth, Mean",
                                "GDP Growth, Difference",
                                "Unemployment, Mean",
                                "Unemployment, Difference",
                                "Income Inequality, Mean",
                                "Income Inequality, Difference"),
                  sd2 = value)
    
    coef_data0_m1 <- m1 %>% 
        tidybayes::gather_draws(`bs?p?_.*`, regex = TRUE) %>% 
        filter(!`.variable`=="b_Intercept") %>% 
        left_join(doubled_sd_m1, by = join_by(.variable))
    
    cy_summary_m1 <- m1$data %>%
        count(country) %>%
        pull(n) %>%
        summary()

    save(m1, doubled_sd_m1, coef_data0_m1, cy_summary_m1,
         file = here::here("data", "results_m1.rda"))
} else {
    load(file = here::here("data", "results_m1.rda"))
}

m1_obs <- m1$data %>% 
    nrow()

eb_obs <- dcpo_input_raw1 %>% 
    filter(country %in% oecd_countries & r==1 & item == "trust_parl2") %>% 
    nrow()
```

The resulting dataset comprises all thirty-eight OECD countries and a total of `r m1_obs` country-years.
The number of country-years observed per country ranges from sixteen (Turkey) to forty-three (the United States) consecutive years (mean: `r cy_summary_m1 %>% nth(4) %>% round(1)` years, median: `r cy_summary_m1 %>% nth(3)` years).
The advantage in data availability over pooling responses to a single question is clear: even among these relatively data-rich countries, the two richest single items available---the Eurobarometer's questions on trust in national parliaments and in political parties---each provide only fewer than half as many country-years for analysis, `r eb_obs` observations, and these Eurobarometer data naturally entirely exclude the nine OECD members outside Europe.

<!-- Revise these lines!!! -->

<!-- @Shor2007 demonstrates that such pooled time series are best analyzed using a Bayesian multilevel model including varying intercepts for each country and each year.  -->

<!-- The former help account for heteroskedasticity across space due to, e.g., omitted variable bias, while permitting the inclusion of time-invariant predictors such as parliamentarism and federalism. -->

<!-- The latter take into account 'time shocks' that operate on all countries simultaneously [@Shor2007, 171-172]. -->

<!-- Further, the 'within-between random effects' specification is employed, meaning each of the time-varying predictors is decomposed into its time-invariant country mean and the difference between each country-year value and this country mean; this specification is superior to fixed effects and other commonly used TSCS specifications for addressing omitted variable bias and endogeneity [@Bell2015]. -->

<!-- The time-varying difference variables capture the short-term effects of the predictors, while the time-invariant country-mean variables reflect their---often different---long-run, "historical" effects [@Bell2015, 137]. -->

Finally, Bayesian analysis allows us to incorporate directly into our model the quantified measurement uncertainty in the data for political discontent and for income inequality, with the estimated values of these two variables treated as random draws from distributions with unknown true means but known standard deviations [@McElreath2016, 425-431; see also @Kurz2023, 15.1.2].
The model was estimated using the `brms` R package [@Burkner2017].

```{r m1plot, fig.cap="Predicting Public Political Discontent in OECD Countries", fig.height = 5, fig.width = 7.5}
#| label: fig-m1plot

ordered <- doubled_sd_m1 %>%
    pull(var_names) %>% 
    rev()

coef_data <- coef_data0_m1 %>% 
    mutate(std_coef = round(.value * sd2, 3),
           term = factor(var_names, levels = ordered)) %>%
    ggdist::median_qi(std_coef, .width = c(.8, .9, .95)) %>%
    left_join(doubled_sd_m1, ., by = join_by(.variable))

plot_notes <- paste0("Notes: Dots indicate posterior means; whiskers, from thickest to thinnest, describe 80%,\n90%, and 95% credible intervals; shading depicts the posterior probability density function. Number of country-year observations: ", nrow(m1$data), ".")

coef_data0_m1 %>% 
    mutate(std_coef = .value * sd2,
           term = factor(var_names, levels = ordered)) %>% 
    ggplot(aes(y = term, x = std_coef)) +
    stat_halfeye(.width = c(.8, .9, .95)) +
    geom_vline(xintercept = 0, linetype = "dashed") +
    coord_cartesian(xlim = c(-15, 15)) +
    theme_light() +
    xlab(NULL) +
    ylab(NULL) +
    plot_annotation(caption = str_wrap(plot_notes, 80))
```

_**Revise below, of course**_
The results of this analysis are displayed in @fig-m1plot.[^
@tbl-m1 in Appendix\nobreakspace{}@sec-app-numeric, provides a tabular version.]
The time trend indicates that discontent has been, on average and net of the other included variables, rising over time in these countries by `r get_coef("year", type = "std_coef")` points (95% credible interval: `r get_coef("year", type = "ci")` points).  

The hypothesis that power-sharing institutions yield more public interest in politics is also supported.
Macrointerest is estimated to be `r get_coef("parl")` points higher in countries with parliamentary systems.
The point estimate for the difference in macrointerest between countries with and without federalism is estimated be `r get_coef("federal", type = "std_coef")` points, with `r round(p_direction(m1, parameters = "federal")[[2]]*100, 1)`% of the posterior distribution greater than zero.
And although disproportionality is not estimated to have long-run effects that consistently distinguish countries with more or less proportional electoral results, *changes* in disproportionality appear to have an immediate negative effect: a two-standard-deviation increase in the Gallagher index yields `r get_coef("lsq_diff", type = "std_coef", abs = TRUE)` points less macrointerest (95% c.i.: `r get_coef("lsq_diff", type = "ci")`).

Regarding the debate on whether macrointerest is invigorated or instead discouraged by bad times, the evidence of our cross-national analysis of the impact of economic conditions falls on the side of the latter.
Supporting modernization theory, increases in per capita GDP have a positive short-term effect on aggregate political interest, with a two-standard-deviation increase associated with `r get_coef("gdppc_diff")` points more macrointerest.
The point estimate for the long-term, historical effect as evidenced by differences in mean levels across countries is found to be `r get_coef("gdppc_mean", type = "std_coef")` points, albeit with only `r round(p_direction(m1, parameters = "gdppc_mean")[[2]]*100, 1)`% of the posterior distribution greater than zero.
As predicted by relative power theory, the long-term effects of income inequality are strongly negative, with a two-standard-deviation difference across countries associated with `r get_coef("gini_mean", type = "std_coef", abs = TRUE)` points less macrointerest (95% c.i.: `r get_coef("gini_mean", type = "ci")` points).
Year-to-year changes in income inequality are found to make little difference---it would seem that, from one perspective, the influence of the wealthy over the political agenda does not change on such a short time scale, and from the other, that the public does not react to worsening conditions in the distribution of income with greater interest in its agents' actions.
The results with regard to growth in the national economy and with regard to unemployment similarly do not provide strong evidence of either negative or positive effects.
Still, taken as a whole, this evidence indicates that at least with regard to economic conditions, it is good times, not bad ones, that yield more macrointerest.

# Conclusions {.unlisted .unnumbered}

@Jennings2017: "We are also able to come down against the 'trendless fluctuation' thesis (see Norris [2011]) for Britain, at least if the full postwar period is considered."

::: {#refs-main}
:::

\pagebreak

```{=tex}
\renewcommand{\baselinestretch}{1}
\selectfont
\maketitle
\selectfont
```
```{=tex}
\pagenumbering{arabic}
\renewcommand*{\thepage}{A\arabic{page}}
\setcounter{page}{1}
\renewcommand*{\thefigure}{A\arabic{figure}}
\setcounter{figure}{0}
\renewcommand{\thetable}{A\arabic{table}}
\setcounter{table}{0}
\renewcommand*{\thesection}{A\arabic{section}}
\setcounter{section}{0}
```
```{=tex}
\vspace{-.5in}
\begin{center}
\begin{Large}
Online Supplementary Materials
\end{Large}
\end{center}

\tableofcontents
\newpage
```
# Survey Items Used to Estimate Public Political Discontent {#sec-surveys}

Following @Jennings2017, we conceptualize political discontent as the lack of diffuse political support among the public.
This lack is in turn understood as encompassing low external efficacy, that is, perceptions of government unresponsiveness; a lack of trust in the political system; and perceptions of pervasive corruption.
National and cross-national surveys have often included questions tapping such political discontent for over a half century, but the resulting data are both sparse, that is, unavailable for many countries and years, and incomparable, generated by many different survey items.
We identified `r n_items` such survey items that were asked in no fewer than five country-years in countries surveyed at least twice; these items were drawn from `r n_surveys` different survey datasets.
These items are listed in @tbl-items below, along with the dispersion ($\alpha$) and difficulty ($\beta$) scores estimated for each from the DCPO model.
Lower values of dispersion indicate questions that better identify publics with a higher level of trust from those with lower.
Items have one less difficulty score than the number of response categories.

In accordance with the advice offered by @Hu2022 to avoid data-entry errors by automating data collection, the `DCPOtools` R package [@Solt2019] was used to compile the responses to these questions.
The current version of this software facilitates the entire practical data generation process: from facilitating the acquisition of original survey datasets and converting them into R standard format for quicker loading; through standardizing country names, identifying survey years, and extracting the desired survey items; to restructuring the resulting data for analysis with the DCPO model.
The primary objective is to limit manual interventions, thereby maximizing reproducibility and reducing the error potential inherent in human-operated data preparation tasks.
The survey dataset codes listed in @tbl-items correspond to those used in that package.

The survey items in these source data were asked in a total of `r n_countries` different countries in at least two time points over `r n_years` years, `r year_range`, resulting in `r n_cyi` country-year-item observations.
The number of items observed for each country-year in the source data is displayed in @fig-obs1 and @fig-obs2 below.
The PPD scores of country-years with more observed items are likely to be estimated more precisely.
The estimates for country-years with fewer (or no) observed items rely more heavily (or entirely) on the random-walk prior and are therefore less certain.

```{r dcpo_items}
load(here::here("data", "dcpo_input.rda"))
load(here::here("data", "item_results.rda"))

items_summary <- dcpo_input_raw1 %>%
dplyr::select(country, year, item, survey) %>%
separate_rows(survey, sep=",\\s+") %>% 
distinct() %>%
group_by(item) %>% 
mutate(survey = str_extract(survey, "^[a-z]*"),
all_surveys = paste0(unique(survey), collapse = ", ")) %>% 
ungroup() %>% 
distinct(country, year, item, .keep_all = TRUE) %>% 
group_by(item) %>% 
mutate(n_cy = n()) %>% 
ungroup() %>%
distinct(item, n_cy, all_surveys) %>% 
left_join(surveys_pd %>%
select(item, question_text, response_categories) %>%
distinct(item, .keep_all = TRUE),
by = "item") %>% 
left_join(alpha_results, by = "item") %>% 
left_join(beta_results, by = "item") %>% 
arrange(-n_cy)
```

```{r dcpo_items_table}
#| label: tbl-items

items_summary %>% 
transmute(`Survey\nItem\nCode` = item,
`Country-Years` = as.character(n_cy),
`Question Text` = str_replace(question_text, "([^(]*)\\(.*", "\\1"),
`Response Categories` = response_categories,
`Dispersion` = dispersion,
`Difficulties` = difficulties,
`Survey Dataset Codes*` = all_surveys) %>% 
modelsummary::datasummary_df(output = "kableExtra",
longtable = TRUE, 
title = "Survey Items Used to Estimate Public Political Discontent") %>% 
kableExtra::column_spec(1, width = "7em") %>%
kableExtra::column_spec(2, width = "4em") %>%
kableExtra::column_spec(3, width = "13em") %>%
kableExtra::column_spec(4, width = "16em") %>%
kableExtra::column_spec(5, width = "4em") %>%
kableExtra::column_spec(c(6, 7), width = "8em") %>% 
kableExtra::kable_styling(font_size = 7) %>%
kableExtra::kable_styling(latex_options = "repeat_header") %>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::footnote(symbol = "Survey dataset codes correspond to those used in the DCPOtools R package (Solt, Hu, and Tai 2019).")
```

```{r obs1, fig.cap = "Source Data Observations by Country and Year", fig.height = 9}
#| label: fig-obs1

dcpo_input_plot <- dcpo_input_raw1 %>% 
mutate(country = str_replace(country, "’", "'"),
         country = if_else(country %in% oecd_countries,
                           paste0(country, "*"),
                           country)) %>% 
distinct(country, year, item, cc_rank) %>% 
group_by(country, year) %>% 
summarize(n = n(),
cc_rank = mean(cc_rank)) %>% 
ungroup() %>% 
distinct() |> 
mutate(continent = countrycode(country, "country.name", "continent",
warn = FALSE), 
continent = case_when(country %in% c("Kosovo", "Northern Ireland") ~
"Europe",
continent %in% c("Asia", "Oceania") ~
"Asia-Oceania",
TRUE ~ continent)) %>% 
group_by(continent) %>% 
mutate(mean_cc_rank = mean(cc_rank),
continent = as_factor(continent))

dcpo_input_plot %>%
filter(continent %in% c("Europe", "Asia-Oceania")) %>%
ggplot(aes(x = year, 
y = forcats::fct_reorder(country, cc_rank),
fill = n)) + 
geom_tile() +
scale_fill_steps(low = rev(hcl.colors(8, "inferno"))[1],
high = rev(hcl.colors(8, "inferno"))[8],
breaks =  seq(2, 16, 2),
show.limits = TRUE,
right = FALSE,
name = "Observations") +
labs(x = NULL, y = NULL) +
scale_x_continuous(breaks=seq(1968, 2024, 4),
sec.axis = dup_axis()) +
scale_y_discrete(position = "right") +
theme(axis.text.x  = element_text(size = 6),
axis.text.y  = element_text(size = 7),
strip.background = element_rect(fill = "white", colour = "white"),
strip.placement = "outside",
legend.position = c(0.13, 0.12),
legend.background = element_rect(fill = "white", colour = NA)) +
facet_wrap(~forcats::fct_reorder(continent, mean_cc_rank, .desc = TRUE),
ncol = 1,
scales = "free_y") +
  plot_annotation(caption = str_wrap("Starred countries are OECD democracies, the sample employed in the analysis of public political discontent presented in the main text.", 80))
```

```{r obs2, fig.cap = "Source Data Observations by Country and Year, cont.", fig.height = 9}
#| label: fig-obs2

dcpo_input_plot %>%
filter(!continent %in% c("Europe", "Asia-Oceania")) %>%
ggplot(aes(x = year, 
y = forcats::fct_reorder(country, cc_rank),
fill = n)) + 
geom_tile() +
scale_fill_steps(low = rev(hcl.colors(8, "inferno"))[1],
high = rev(hcl.colors(8, "inferno"))[8],
breaks =  seq(2, 16, 2),
show.limits = TRUE,
right = FALSE,
name = "Observations") +
labs(x = NULL, y = NULL) +
scale_x_continuous(breaks=seq(1968, 2024, 4),
sec.axis = dup_axis()) +
scale_y_discrete(position = "right") +
theme(axis.text.x  = element_text(size = 6),
axis.text.y  = element_text(size = 7),
strip.background = element_rect(fill = "white", colour = "white"),
strip.placement = "outside",
legend.position = c(0.13, 0.12),
legend.background = element_rect(fill = "white", colour = NA)) +
facet_wrap(~forcats::fct_reorder(continent, mean_cc_rank, .desc = TRUE),
ncol = 1,
scales = "free_y") +
  plot_annotation(caption = str_wrap("Starred countries are OECD democracies, the sample employed in the analysis of public political discontent presented in the main text.", 80))
```

\pagebreak

# The DCPO Model {#sec-app-dcpo}

<!-- [Revise the following text!] -->

A number of recent studies have developed latent variable models of aggregate survey responses based on cross-national survey data [see @Claassen2019; @Caughey2019; @McGann2019; @Kolczynska2024].
To estimate the extent of political discontent in the public across countries and over time, we employ the latest of these methods that is appropriate for data that is not only incomparable but also sparse, the Dynamic Comparative Public Opinion (DCPO) model elaborated in @Solt2020c.
The DCPO model is a population-level two-parameter ordinal logistic item response theory (IRT) model with country-specific item-bias terms.

DCPO models the total number of survey responses expressing at least as much discontent as response category $r$ to each question $q$ in country $k$ at time $t$, $y_{ktqr}$, out of the total number of respondents surveyed, $n_{ktqr}$, using the beta-binomial distribution:

\begin{equation}
a_{ktqr} = \phi\eta_{ktqr} \label{eq:bb_a}
\end{equation} \begin{equation}
b_{ktqr} = \phi(1 - \eta_{ktqr}) \label{eq:bb_b}
\end{equation} \begin{equation}
y_{ktqr} \sim \textrm{BetaBinomial}(n_{ktqr}, a_{ktqr}, b_{ktqr}) \label{eq:betabinomial}
\end{equation}

where $\phi$ represents an overall dispersion parameter to account for additional sources of survey error beyond sampling error and $\eta_{ktqr}$ is the expected probability that a random person in country $k$ at time $t$ answers question $q$ with a response at least as interested as response $r$.[^2]

[^2]:  The ordinal responses to question $q$ are coded to range from 1 (expressing the least political discontent) to $R$ (expressing the most political discontent), and $r$ takes on all values greater than 1 and less than or equal to $R$.

This expected probability, $\eta_{ktqr}$, is in turn estimated as follows:

```{=tex}
\begin{equation}
\eta_{ktqr} = \textrm{logit}^{-1}(\frac{\bar{\theta'}_{kt} - (\beta_{qr} + \delta_{kq})}{\sqrt{\alpha_{q}^2 + (1.7*\sigma_{kt})^2}}) \label{eq:dcpo}
\end{equation}
```
In this equation, $\beta_{qr}$ represents the difficulty of response $r$ to question $q$, that is, the degree of political the response expresses.
The $\delta_{kq}$ term represents country-specific item bias: the extent to which all responses to a particular question $q$ may be more (or less) difficult in a given country $k$ due to translation issues, cultural differences in response styles, or other idiosyncrasies that render the same survey item not equivalent across countries.[^3]
The dispersion of question $q$, its noisiness in relation to the latent variable, is $\alpha_{q}$.
The mean and standard deviation of the unbounded latent trait of public political discontent are $\bar{\theta'}_{kt}$ and $\sigma_{kt}$, respectively.

[^3]:  Estimating $\delta_{kq}$ requires repeated administrations of question $q$ in country $k$, so when responses to question $q$ are observed in country $k$ in only a single year, the DCPO model sets $\delta_{kq}$ to zero by assumption, increasing the error of the model by any country-item bias that is present.
    Questions that are asked repeatedly over time in only a single country pose no risk of country-specific item bias, so $\delta_{kq}$ in such cases are also set to zero.

Random-walk priors are used to account for the dynamics in $\bar{\theta'}_{kt}$ and $\sigma_{kt}$, and weakly informative priors are placed on the other parameters.[^4]
The dispersion parameters $\alpha_q$ are constrained to be positive and all survey responses are coded with high values indicating more political discontent to fix direction.
The difficulty $\beta$ of "run by a few big interests" to the oft-asked question "would you say that this country is run by a few big interests looking out for themselves, or that it is run for the benefit of all the people?" is set to 1 to identify location, and for each question $q$ the difficulties for increasing response categories $r$ are constrained to be increasing.
The sum of $\delta_{kq}$ across all countries $k$ is set to zero for each question $q$:

[^4]:  The dispersion parameters $\alpha_{q}$ are drawn from standard half-normal prior distributions, that is, the positive half of N(0, 1).
    The first difficulty parameters for each question, $\beta_{q1}$, are drawn from standard normal prior distributions, and the differences between $\beta$s for each $r$ for the same question $q$ are drawn from standard half-normal prior distributions.
    The item-bias parameters $\delta_{kq}$ receive normally-distributed hierarchical priors with mean 0 and standard deviations drawn from standard half-normal prior distributions.
    The initial value of the mean unbounded latent trait for each country, $\bar{\theta'}_{k1}$, is assigned a standard normal prior, as are the transition variances $\sigma_{\bar{\theta'}}^2$ and $\sigma_{\sigma}^2$; the initial value of the standard deviation of the unbounded latent trait for each country, $\sigma_{k1}$, is drawn from a standard lognormal prior distribution.
    The overall dispersion, $\phi$, receives a somewhat more informative prior drawn from a gamma(4, 0.1) distribution that yields values that are well scaled for that parameter.

```{=tex}
\begin{equation}
\sum_{k = 1}^K \delta_{kq} = 0
\end{equation}
```
Finally, the logistic function is used to transform $\bar{\theta'}_{kt}$ to the unit interval and so give the bounded mean of political discontent, $\bar{\theta}_{kt}$, which is our parameter of interest here [see @Solt2020c, 3-8].

The DCPO model accounts for the incomparability of different survey questions with two parameters.
First, it incorporates the *difficulty* of each question's responses, that is, how much political discontent is indicated by a given response.
That each response evinces more or less of our latent trait is most easily seen with regard to the ordinal responses to the same question: responding "strongly agree" to the statement "people like me don't have any say about what the government does" exhibits more political discontent than choosing "agree," which is a more discontented response that "disagree," which in turn is more discontented than "strongly disagree." But this is also true across questions.
For example, strongly agreeing that "there is widespread corruption among those who govern the country" likely expresses even more discontent than strongly agreeing that "people like me can probably vote, but we cannot do anything else to influence politics." Second, the DCPO model accounts for each question's *dispersion*, its noisiness with regard to our latent trait.
The lower a question's dispersion, the better that changes in responses to the question map onto changes in public political discontent.
Together, the model's difficulty and dispersion estimates work to generate comparable estimates of the latent variable of public political discontent from the available but incomparable source data.

To address the sparsity of the source data---the fact that there are gaps in the time series of each country, and even many observed country-years have only one or few observed items---DCPO uses simple local-level dynamic linear models, i.e., random-walk priors, for each country.
That is, within each country, each year's value of public political discontent is modeled as the previous year's estimate plus a random shock.
These dynamic models smooth the estimates of discontent over time and allow estimation even in years for which little or no survey data is available, albeit at the expense of greater measurement uncertainty.

It is worth noting that not all sources of incomparability are likely to be fully addressed by the DCPO model.
To the extent that survey sample representation issues---such as from variations in population definitions (such as age range, minority inclusion, and territorial exclusions) and sample designs (like probability versus non-probability samples, and older surveys' reliance on quota or random route samples without enumeration)---vary across years for a single country and item (as is typically the case, as more recent surveys are more likely to be fully representative), the country-specific item bias terms will not remedy this problem.
And although survey weights are easily incorporated in the source data (and indeed the `DCPOtools` package does so automatically), not all available weights yield fully representative samples, and some surveys lack weights entirely.
Unlike the model employed by @Caughey2019, the DCPO model does not incorporate poststratification to correct for these issues.
While this does increase computational tractability and decrease data demands, the downside is clearly greater measurement uncertainty in the estimates in country-years where the data are relatively rich (via $\phi$) and potential bias in the estimates where data are more sparse.

\pagebreak

# Numeric Results {#sec-app-numeric}

## Tabular Version of Results Presented in @fig-m1plot {#sec-m1table}

<!-- \FloatBarrier -->

```{r modelTB}
#| label: tbl-m1

vec_coefName <- c("b_year" = "Time Trend",
  "b_election" = "Election Year",
  "b_parl" = "Parliamentarism",
  "b_federal" = "Federalism",
  "b_lsq_mean" = "Disproportionality, Mean",
  "b_lsq_diff" = "Disproportionality, Difference",
  "b_gdppc_mean" = "GDPpc, Mean",
  "b_gdppc_diff" = "GDPpc, Difference",
  "b_growth_mean" = "GDP Growth, Mean",
  "b_growth_diff" = "GDP Growth, Difference",
  "b_unemploy_mean" = "Unemployment, Mean",
  "b_unemploy_diff" = "Unemployment, Difference",
  "bsp_megini_meangini_mean_se" = "Income Inequality, Mean",
  "bsp_megini_diffgini_diff_se" = "Income Inequality, Difference")

# Create a modelsummary table with the number of observations included
modelsummary(m1,
    coef_map = vec_coefName,
    metrics = c("R2", "RMSE"),
    gof_omit = "[Mm]arg",
    statistic = "conf.int",
    notes = str_wrap("Unstandardized coefficients with associated 95-percent credible intervals in brackets below.", 80),
    output = "kableExtra") %>% 
    kableExtra::kable_styling(font_size = 10)
# tinytable::style_tt(fontsize = .6,
#                     tabularray_inner = "rowsep = 0pt")

```

<!-- \FloatBarrier -->

\pagebreak

# References {.unlisted .unnumbered}

::: {#refs-appendix}
:::
